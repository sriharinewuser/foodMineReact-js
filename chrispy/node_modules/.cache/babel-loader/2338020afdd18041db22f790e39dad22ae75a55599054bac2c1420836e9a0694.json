{"ast":null,"code":"import { sample_foods, sample_tags } from \"../data\";\nexport const getAll = async () => sample_foods;\nexport const search = async searchTerm => sample_foods.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()));\nexport const getAllTags = async () => sample_tags;\nexport const getAllByTag = async tag => {\n  if (tag === \"All\") return getAll();\n  return sample_tags.filter(item => {\n    var _item$tags;\n    return (_item$tags = item.tags) === null || _item$tags === void 0 ? void 0 : _item$tags.include(tag);\n  });\n};","map":{"version":3,"names":["sample_foods","sample_tags","getAll","search","searchTerm","filter","item","name","toLowerCase","includes","getAllTags","getAllByTag","tag","_item$tags","tags","include"],"sources":["/home/rajesh/Desktop/srihari new user/FoodMart-React-Js/chrispy/src/services/foodService.js"],"sourcesContent":["import { sample_foods, sample_tags } from \"../data\";\n\nexport const getAll = async () => sample_foods;\n\nexport const search = async searchTerm =>\n  sample_foods.filter(item =>\n    item.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\nexport const getAllTags = async () => sample_tags;\n\nexport const getAllByTag = async tag => {\n  if (tag === \"All\") return getAll();\n  return sample_tags.filter(item => item.tags?.include(tag));\n};\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,QAAQ,SAAS;AAEnD,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAYF,YAAY;AAE9C,OAAO,MAAMG,MAAM,GAAG,MAAMC,UAAU,IACpCJ,YAAY,CAACK,MAAM,CAACC,IAAI,IACtBA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,CAAC,CAAC,CAC3D,CAAC;AAEH,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAYT,WAAW;AAEjD,OAAO,MAAMU,WAAW,GAAG,MAAMC,GAAG,IAAI;EACtC,IAAIA,GAAG,KAAK,KAAK,EAAE,OAAOV,MAAM,CAAC,CAAC;EAClC,OAAOD,WAAW,CAACI,MAAM,CAACC,IAAI;IAAA,IAAAO,UAAA;IAAA,QAAAA,UAAA,GAAIP,IAAI,CAACQ,IAAI,cAAAD,UAAA,uBAATA,UAAA,CAAWE,OAAO,CAACH,GAAG,CAAC;EAAA,EAAC;AAC5D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}