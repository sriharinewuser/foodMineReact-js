{"ast":null,"code":"var _jsxFileName = \"/home/rajesh/Desktop/srihari new user/FoodMart-React-Js/chrispy/src/components/hooks/useCart.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { sample_foods } from '../../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(null);\nconst CART_KEY = 'cart';\nconst EMPTY_CART = {\n  items: [],\n  totalPrice: 0,\n  totalCount: 0\n};\nexport default function CartProvider({\n  children\n}) {\n  const sum = items => {\n    return items.reduce((prevValue, curValue) => prevValue + curValue, 0);\n  };\n  const removeFromCart = foodId => {\n    const filteredCartItems = cartItems.filter(item => item.food.id !== foodId);\n    setCartItems(filteredCartItems);\n  };\n  const changeQuantity = (cartItem, newQauntity) => {\n    const {\n      food\n    } = cartItem;\n    const changedCartItem = {\n      ...cartItem,\n      quantity: newQauntity,\n      price: food.price * newQauntity\n    };\n    setCartItems(cartItems.map(item => item.food.id === food.id ? changedCartItem : item));\n  };\n  const addToCart = food => {\n    const cartItem = cartItems.find(item => item.food.id === food.id);\n    if (cartItem) {\n      changeQuantity(cartItem, cartItem.quantity + 1);\n    } else {\n      setCartItems([...cartItems, {\n        food,\n        quantity: 1,\n        price: food.price\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: {\n        items: cartItems,\n        totalPrice,\n        totalCount\n      },\n      removeFromCart,\n      changeQuantity,\n      addToCart,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = CartProvider;\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","sample_foods","jsxDEV","_jsxDEV","CartContext","CART_KEY","EMPTY_CART","items","totalPrice","totalCount","CartProvider","children","sum","reduce","prevValue","curValue","removeFromCart","foodId","filteredCartItems","cartItems","filter","item","food","id","setCartItems","changeQuantity","cartItem","newQauntity","changedCartItem","quantity","price","map","addToCart","find","Provider","value","cart","clearCart","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s","$RefreshReg$"],"sources":["/home/rajesh/Desktop/srihari new user/FoodMart-React-Js/chrispy/src/components/hooks/useCart.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { sample_foods } from '../../data';\n\nconst CartContext = createContext(null);\nconst CART_KEY = 'cart';\nconst EMPTY_CART = {\n  items: [],\n  totalPrice: 0,\n  totalCount: 0,\n};\n\nexport default function CartProvider({ children }) {\n  \n\n\n\n  const sum = items => {\n    return items.reduce((prevValue, curValue) => prevValue + curValue, 0);\n  };\n\n\n  const removeFromCart = foodId => {\n    const filteredCartItems = cartItems.filter(item => item.food.id !== foodId);\n    setCartItems(filteredCartItems);\n  };\n\n  const changeQuantity = (cartItem, newQauntity) => {\n    const { food } = cartItem;\n\n    const changedCartItem = {\n      ...cartItem,\n      quantity: newQauntity,\n      price: food.price * newQauntity,\n    };\n\n    setCartItems(\n      cartItems.map(item => (item.food.id === food.id ? changedCartItem : item))\n    );\n  };\n\n\n  const addToCart = food => {\n    const cartItem = cartItems.find(item => item.food.id === food.id);\n    if (cartItem) {\n      changeQuantity(cartItem, cartItem.quantity + 1);\n    } else {\n      setCartItems([...cartItems, { food, quantity: 1, price: food.price }]);\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart: { items: cartItems, totalPrice, totalCount },\n        removeFromCart,\n        changeQuantity,\n        addToCart,\n        clearCart,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport const useCart = () => useContext(CartContext);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,YAAY,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AACvC,MAAMQ,QAAQ,GAAG,MAAM;AACvB,MAAMC,UAAU,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,CAAC;EACbC,UAAU,EAAE;AACd,CAAC;AAED,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAKjD,MAAMC,GAAG,GAAGL,KAAK,IAAI;IACnB,OAAOA,KAAK,CAACM,MAAM,CAAC,CAACC,SAAS,EAAEC,QAAQ,KAAKD,SAAS,GAAGC,QAAQ,EAAE,CAAC,CAAC;EACvE,CAAC;EAGD,MAAMC,cAAc,GAAGC,MAAM,IAAI;IAC/B,MAAMC,iBAAiB,GAAGC,SAAS,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,EAAE,KAAKN,MAAM,CAAC;IAC3EO,YAAY,CAACN,iBAAiB,CAAC;EACjC,CAAC;EAED,MAAMO,cAAc,GAAGA,CAACC,QAAQ,EAAEC,WAAW,KAAK;IAChD,MAAM;MAAEL;IAAK,CAAC,GAAGI,QAAQ;IAEzB,MAAME,eAAe,GAAG;MACtB,GAAGF,QAAQ;MACXG,QAAQ,EAAEF,WAAW;MACrBG,KAAK,EAAER,IAAI,CAACQ,KAAK,GAAGH;IACtB,CAAC;IAEDH,YAAY,CACVL,SAAS,CAACY,GAAG,CAACV,IAAI,IAAKA,IAAI,CAACC,IAAI,CAACC,EAAE,KAAKD,IAAI,CAACC,EAAE,GAAGK,eAAe,GAAGP,IAAK,CAC3E,CAAC;EACH,CAAC;EAGD,MAAMW,SAAS,GAAGV,IAAI,IAAI;IACxB,MAAMI,QAAQ,GAAGP,SAAS,CAACc,IAAI,CAACZ,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,EAAE,KAAKD,IAAI,CAACC,EAAE,CAAC;IACjE,IAAIG,QAAQ,EAAE;MACZD,cAAc,CAACC,QAAQ,EAAEA,QAAQ,CAACG,QAAQ,GAAG,CAAC,CAAC;IACjD,CAAC,MAAM;MACLL,YAAY,CAAC,CAAC,GAAGL,SAAS,EAAE;QAAEG,IAAI;QAAEO,QAAQ,EAAE,CAAC;QAAEC,KAAK,EAAER,IAAI,CAACQ;MAAM,CAAC,CAAC,CAAC;IACxE;EACF,CAAC;EAED,oBACE3B,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IACnBC,KAAK,EAAE;MACLC,IAAI,EAAE;QAAE7B,KAAK,EAAEY,SAAS;QAAEX,UAAU;QAAEC;MAAW,CAAC;MAClDO,cAAc;MACdS,cAAc;MACdO,SAAS;MACTK;IACF,CAAE;IAAA1B,QAAA,EAEDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACC,EAAA,GApDuBhC,YAAY;AAsDpC,OAAO,MAAMiC,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAM9C,UAAU,CAACM,WAAW,CAAC;AAAA;AAACwC,EAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}