{"ast":null,"code":"import { sample_foods, sample_tags } from \"../data\";\nexport const getAll = async () => sample_foods;\nexport const search = async searchTerm => sample_foods.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()));\nexport const getAllTags = async () => sample_tags;\nexport const getAllByTags = async tag => {\n  if (tag === 'All') return getAll();\n  return sample_foods.filter(item => {\n    var _item$tags;\n    return (_item$tags = item.tags) === null || _item$tags === void 0 ? void 0 : _item$tags.includes(tag);\n  });\n};","map":{"version":3,"names":["sample_foods","sample_tags","getAll","search","searchTerm","filter","item","name","toLowerCase","includes","getAllTags","getAllByTags","tag","_item$tags","tags"],"sources":["/home/rajesh/Desktop/srihari new user/FoodMart-React-Js/chrispy/src/services/foodService.js"],"sourcesContent":["import { sample_foods, sample_tags } from \"../data\";\n\n\nexport const getAll =async () => sample_foods;\n\nexport const search = async searchTerm => \n    sample_foods.filter(item =>\n        item.name.toLowerCase().includes(searchTerm.toLowerCase())\n);\n\nexport const getAllTags = async () => sample_tags;\n\nexport const getAllByTags = async tag => {\n    if(tag ==='All') return getAll();\n    return sample_foods.filter(item => item.tags?.includes(tag));\n\n};\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,QAAQ,SAAS;AAGnD,OAAO,MAAMC,MAAM,GAAE,MAAAA,CAAA,KAAYF,YAAY;AAE7C,OAAO,MAAMG,MAAM,GAAG,MAAMC,UAAU,IAClCJ,YAAY,CAACK,MAAM,CAACC,IAAI,IACpBA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,CAAC,CAAC,CACjE,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAYT,WAAW;AAEjD,OAAO,MAAMU,YAAY,GAAG,MAAMC,GAAG,IAAI;EACrC,IAAGA,GAAG,KAAI,KAAK,EAAE,OAAOV,MAAM,CAAC,CAAC;EAChC,OAAOF,YAAY,CAACK,MAAM,CAACC,IAAI;IAAA,IAAAO,UAAA;IAAA,QAAAA,UAAA,GAAIP,IAAI,CAACQ,IAAI,cAAAD,UAAA,uBAATA,UAAA,CAAWJ,QAAQ,CAACG,GAAG,CAAC;EAAA,EAAC;AAEhE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}